// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post{
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String @db.VarChar(255)
  content String
  published Boolean @default(false)

  author User @relation(fields: [authorId], references: [id])
  authorId String

  comments Comment[]
  categories CategoriesOnPosts[]
}

model Comment{
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  content String

  author User? @relation(fields: [authorId], references: [id])
  authorId String?

  authorUsername String?

  post Post @relation(fields: [postId], references: [id])
  postId String
}

model User{
  id String @id @default(uuid())
  username String  @unique

  posts Post[]
  comments Comment[]
  role Role
}

model Category{
  id String @id @default(uuid())
  name String
  posts CategoriesOnPosts[]

}

model CategoriesOnPosts{
  post Post @relation(fields: [postId], references: [id])
  postId String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  assignedAt DateTime @default(now())
  @@id([postId, categoryId])
}

enum Role{
  USER
  AUTHOR
}
